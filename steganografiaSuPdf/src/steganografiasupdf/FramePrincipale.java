/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package steganografiasupdf;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import steganografiasupdf.embedding.PannelloEmbedding;
import steganografiasupdf.estrazione.PannelloEstrazione;

/**
 *
 * @author Rocchina
 */
public class FramePrincipale extends javax.swing.JFrame {

    private final SteganografiaSuPdf steganografia;
    private PannelloEmbedding embedding;
    private PannelloEstrazione estrazione;
    private final Log log = LogFactory.getLog(FramePrincipale.class);
    private JFileChooser jfc;
    
    /**
     * Creates new form FramePrincipale
     * @param steganografia
     */
    public FramePrincipale(SteganografiaSuPdf steganografia) {
        this.steganografia = steganografia;
        initComponents();
        postInizializza();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemInserisci = new javax.swing.JMenuItem();
        jMenuItemEstrai = new javax.swing.JMenuItem();
        jMenuItemInfo = new javax.swing.JMenuItem();
        jMenuItemEsci = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        jMenuItemInserisci.setText("Inserisci messaggio");
        jMenu1.add(jMenuItemInserisci);

        jMenuItemEstrai.setText("Estrai messaggio");
        jMenu1.add(jMenuItemEstrai);

        jMenuItemInfo.setText("Info");
        jMenu1.add(jMenuItemInfo);

        jMenuItemEsci.setText("Esci");
        jMenu1.add(jMenuItemEsci);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemEsci;
    private javax.swing.JMenuItem jMenuItemEstrai;
    private javax.swing.JMenuItem jMenuItemInfo;
    private javax.swing.JMenuItem jMenuItemInserisci;
    // End of variables declaration//GEN-END:variables

    private void postInizializza() {
        this.setTitle("Steganografia su PDF");
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        aggiungiAzioni();
    }

    private void aggiungiAzioni() {
        this.jMenuItemEsci.setAction(this.getSteganografia().getEsci());
        this.jMenuItemInfo.setAction(this.getSteganografia().getInfo());
        this.jMenuItemInserisci.setAction(this.getSteganografia().getMostra());
        this.jMenuItemEstrai.setAction(this.getSteganografia().getMostraEstrazione());
    }
    
    public void finestraInfo(String info){
        JOptionPane.showMessageDialog(rootPane, info, "INFORMAZIONE", JOptionPane.INFORMATION_MESSAGE);
    }

    public void finestraErrore(String errore){
        JOptionPane.showMessageDialog(rootPane, errore, "ERRORE", JOptionPane.ERROR_MESSAGE);
    }
    
    public void mostraPannelloEstrazione(){
        //disabilita l'azione di embedding
        this.jMenuItemInserisci.setEnabled(false);
        this.estrazione = new PannelloEstrazione(this);
        JScrollPane jsp = new JScrollPane(this.estrazione);
        this.setContentPane(jsp);
        this.setLocationRelativeTo(null);
        this.pack();
        this.setVisible(true);
    }
    
    public void mostraPannelloEmbedding(){
        //disabilita l'azione di estrazione:
        this.jMenuItemEstrai.setEnabled(false);
        this.embedding = new PannelloEmbedding(this);
        JScrollPane jsp = new JScrollPane(this.getEmbedding());
        this.setContentPane(jsp);
        this.setLocationRelativeTo(null);
        this.pack();
        this.setVisible(true);
    }

    /**
     * @return the steganografia
     */
    public SteganografiaSuPdf getSteganografia() {
        return steganografia;
    }

    /**
     * @return the embedding
     */
    public PannelloEmbedding getEmbedding() {
        return embedding;
    }
    
    public int pdfSelezionato(){
        log.info("Nel metodo pdfSelezionato() di FramePrincipale");
        String pathFile;
        this.jfc = new JFileChooser();
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("PDF", "pdf");
        this.jfc.setFileFilter(fnef);
        return this.jfc.showOpenDialog(this);
    }

    public String getNomeFile() {
        return this.jfc.getSelectedFile().getName();
    }
    
    public String getPathFile(){
        return this.jfc.getSelectedFile().getPath();
    }

    /**
     * @return the estrazione
     */
    public PannelloEstrazione getEstrazione() {
        return estrazione;
    }
    
}